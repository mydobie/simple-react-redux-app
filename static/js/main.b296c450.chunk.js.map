{"version":3,"sources":["feature-flags.config.ts","AppRouteNames.ts","AppNavBar.tsx","js/whichEnv.ts","pages/Home.tsx","pages/Version.tsx","images/page_not_found.svg","pages/FourOhFour.tsx","AppRoutes.tsx","components/SetAxios.tsx","index.tsx","App.tsx","redux/reducers/index.ts","redux/store.ts"],"names":["featureFlagArray","activeClass","isActive","AppNavBar","Nav","Item","className","to","ROUTES","envTypes","dev","ci","test","stage","prod","environments","urlpattern","env","isProd","host","window","location","hostname","some","includes","Home","Row","Col","Card","bg","text","Body","Version","id","process","FourOhFour","style","textAlign","src","notFoundImage","alt","AppRoutes","path","element","SetAxios","clearError","setError","testResponse","testMode","setAxiosHeaders","axios","interceptors","request","use","config","error","Promise","reject","response","status","UNKNOWN_ERROR","RenderApp","Router","HashRouter","Header","Title","Footer","marginTop","App","useDispatch","loadFeatureFlagsRedux","features","overrides","JSON","parse","REACT_APP_FEATURE_FLAGS","persist","basename","Container","combineReducers","FeatureFlags","featureFlagsReducers","persistConfig","key","version","storage","persistedReducer","persistReducer","rootReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","loading","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b296c450.chunk.js","sourcesContent":["import { FlagType } from 'feature-flags';\n/* ****************** FEATURE FLAG CODES **************** */\n/*\nAdd all feature flag ids as constants so it can be used across the application.\nFor example:\n\nexport const COLORS = 'COLORS';\n*/\n\n/* ****************** FEATURE FLAG  ARRAY ************** */\n/*\nAdd all feature flags in the following format:\n[\n  {\n    id: COLORS,  // id used across the app for this feature\n    inuse: false, // should the feature be enabled?\n    description: 'A list of all the primary and secondary colors.', // description shown for this feature\n  },\n  ...\n]\n*/\n\nexport const featureFlagArray: [FlagType] | [] = [];\n","export default {\n  HOME: '/',\n  VERSION: '/version',\n  FEATURE_FLAGS: '/features',\n};\n","// Main navigation bar\n\nimport React, { ReactElement } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Nav } from 'react-bootstrap';\n\nimport ROUTES from './AppRouteNames';\n\nconst activeClass = (isActive: boolean) =>\n  `nav-link ${isActive ? 'active' : ''}`;\n\nconst AppNavBar = (): ReactElement => (\n  <nav>\n    <Nav>\n      <Nav.Item>\n        <NavLink\n          className={({ isActive }) => activeClass(isActive)}\n          to={ROUTES.HOME}\n        >\n          Home\n        </NavLink>\n      </Nav.Item>\n\n      <Nav.Item>\n        <NavLink\n          className={({ isActive }) => activeClass(isActive)}\n          to={ROUTES.VERSION}\n        >\n          Version\n        </NavLink>\n      </Nav.Item>\n    </Nav>\n  </nav>\n);\n\nexport default AppNavBar;\n","// *********************** GET ENVIRONMENT BASED ON URL ************************* //\n// Add non-prod environments here:\n\nconst envTypes = {\n  dev: 'dev',\n  ci: 'ci',\n  test: 'test',\n  stage: 'stage',\n  prod: 'prod',\n};\n\nconst environments = [\n  { urlpattern: 'localhost', env: envTypes.dev },\n  { urlpattern: '127.0.0.1', env: envTypes.dev },\n  { urlpattern: 'dev.', env: envTypes.dev },\n  { urlpattern: 'development.', env: envTypes.dev },\n  { urlpattern: 'test.', env: envTypes.test },\n  { urlpattern: 'tst.', env: envTypes.test },\n  { urlpattern: 'ci.', env: envTypes.ci },\n  { urlpattern: 'qa.', env: envTypes.stage },\n  { urlpattern: 'qat.', env: envTypes.stage },\n  { urlpattern: 'stage.', env: envTypes.stage },\n  { urlpattern: 'staging.', env: envTypes.stage },\n];\n\nexport const isProd = (): boolean => {\n  const host = window.location.hostname;\n  return !environments.some((env) => host.includes(env.urlpattern));\n};\n\nexport const whichEnvString = (): string => {\n  // Handy for debugging and printing to console\n  const host = window.location.hostname;\n  const found = environments.find((env) => host.includes(env.urlpattern));\n  return `Hostname: ${host}, Environment: ${\n    found === undefined ? 'production' : found.env\n  }`;\n};\n\nconst isEnv = (envType: string): boolean => {\n  const host = window.location.hostname;\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  if (!envTypes[envType]) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Environment ${envType} sent to \"isEnv\" helper function is unknown.`\n    );\n  }\n\n  return environments.some(\n    (env) => host.includes(env.urlpattern) && env.env === envType\n  );\n};\n\nexport const isDev = (): boolean => isEnv(envTypes.dev);\n\nexport const isCI = (): boolean => isEnv(envTypes.ci);\n\nexport const isTest = (): boolean => isEnv(envTypes.test);\n\nexport const isStage = (): boolean => isEnv(envTypes.stage);\n\nexport const isLocalHost = (): boolean => {\n  const host = window.location.hostname;\n  return host.includes('localhost') || host.includes('127.0.0.1');\n};\n","// NOTE This is a sample page and should either be\n// modified or removed from a real project\n\nimport React, { ReactElement } from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\n\n// *** Main component ***\nconst Home = (): ReactElement => (\n  <Row data-testid='homePageContainer'>\n    <Col>\n      <Card bg='secondary' text='white'>\n        <Card.Body>\n          <h1>Sample Application </h1>\n          <p>This is the home page for an application</p>\n        </Card.Body>\n      </Card>\n      <p>\n        This project can be used as template when starting other React/Redux\n        projects.\n      </p>\n    </Col>\n  </Row>\n);\n\nexport default Home;\n","// Page that shows the application name and version from package.json file\n// Along with the git commit.\n// Note this file should be used in most applications\n// Normally there isn't a need to modify it\nimport React, { ReactElement } from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\nconst Version = (/* props */): ReactElement => (\n  <>\n    <Row data-testid='versionPageContainer'>\n      <Col>\n        <h1>Version</h1>\n        <ul>\n          <li>\n            <strong>Application Name: </strong>\n            <span id='appNameFromPackageJson'>\n              {process.env.REACT_APP_NAME}\n            </span>\n          </li>\n          <li>\n            <strong>Version: </strong>\n            <span id='appVersionFromPackageJson'>\n              {process.env.REACT_APP_VERSION}\n            </span>\n          </li>\n          <li>\n            <strong>Git Commit: </strong>\n            <span id='gitCommitHash'>{process.env.REACT_APP_GIT_SHA}</span>\n          </li>\n          <li>\n            <strong>State persists on refresh: </strong>\n            {process.env.REACT_APP_USE_LOCAL_STORAGE\n              ? process.env.REACT_APP_USE_LOCAL_STORAGE\n              : 'false'}\n          </li>\n        </ul>\n      </Col>\n    </Row>\n  </>\n);\n\nexport default Version;\n","export default __webpack_public_path__ + \"static/media/page_not_found.61ba8739.svg\";","// Page rendered when url doesn't match route in App.tsx\n\nimport React, { ReactElement } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport notFoundImage from '../images/page_not_found.svg';\n\n// *** Main component ***\nconst FourOhFour = (/* props */): ReactElement => (\n  <Row data-testid='404PageContainer'>\n    <Col>\n      <h1>Page not found</h1>\n      <p>The page you requested could not be found.</p>\n      <p style={{ textAlign: 'center' }}>\n        <img src={notFoundImage} className='App-logo' alt='' />\n      </p>\n    </Col>\n  </Row>\n);\n\nexport default FourOhFour;\n","// Contains routing for entire application\n\nimport React, { ReactElement } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { FeatureFlagsReduxUI } from 'feature-flags';\nimport { isProd } from './js/whichEnv';\n\nimport ROUTES from './AppRouteNames';\n\nimport Home from './pages/Home';\nimport Version from './pages/Version';\nimport FourOhFour from './pages/FourOhFour';\n\nconst AppRoutes = (): ReactElement => (\n  <>\n    <Routes>\n      <Route path={ROUTES.HOME} element={<Home />} />\n\n      <Route path={ROUTES.VERSION} element={<Version />} />\n\n      {!isProd() ? (\n        <Route path={ROUTES.FEATURE_FLAGS} element={<FeatureFlagsReduxUI />} />\n      ) : null}\n\n      <Route path='*' element={<FourOhFour />} />\n    </Routes>\n  </>\n);\n\nexport default AppRoutes;\n","// NOTE This file allows you to write code that will be run before and after every ajax call\n\n/* eslint-disable no-fallthrough */\n\nimport React, { ReactElement } from 'react';\nimport axios from 'axios';\n// import { useHistory, useLocation } from 'react-router-dom';\n\n// ** Main component type */\ninterface Props {\n  clearError?: () => void;\n  setError?: (error?: string) => void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  testResponse?: (response: any) => void; // this is only used to test SetAxios\n  testMode?: boolean;\n}\n\n// *** Main component ***\nconst SetAxios = ({\n  clearError = () => {},\n  setError = () => {},\n  testResponse = () => {},\n  testMode = false,\n}: Props): ReactElement => {\n  // const history = useHistory(); // You can goto another route automatically = history.push(\"/mypath\")\n  // const location = useLocation(); // Route of current page = location.pathname\n\n  SetAxios.setAxiosHeaders();\n\n  axios.interceptors.request.use(\n    (config) => {\n      // Add code to be run before an ajax call is made HERE\n      clearError();\n      return config;\n    },\n    (error) => (!testMode ? Promise.reject(error) : null)\n  );\n\n  axios.interceptors.response.use(\n    (response) => {\n      // Add code to be run after a successful ajax call HERE\n      testResponse(response);\n      return response;\n    },\n    (error) => {\n      // Add code to be run after a failed ajax call HERE\n      if (error.response?.status) {\n        switch (error.response?.status) {\n          case 401:\n          //  history.push(LOGIN_ROUTE); // example to forward to another page\n          // break;\n          case 403:\n          // break;\n          case 404:\n          // break;\n          case 500:\n          // break;\n          default:\n            setError(SetAxios.UNKNOWN_ERROR);\n            break;\n        }\n      } else {\n        setError(SetAxios.UNKNOWN_ERROR);\n      }\n      return !testMode ? Promise.reject(error) : null;\n    }\n  );\n\n  return <div />;\n};\n\nSetAxios.setAxiosHeaders = (/* token */) => {\n  // Set common headers like authorization HERE\n  // axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\n\nSetAxios.UNKNOWN_ERROR = 'An unknown error has occurred. Please try again.';\n\nexport default SetAxios;\n","/* This tells the application to load into the html object with an id of \"root\"\nNOTE: There normally isn't a reason to change this file\n*/\n\nimport React, { ReactElement } from 'react';\nimport { persistStore } from 'redux-persist';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport { store } from './redux/store';\nimport './scss/index.scss';\n\nconst useRedux = process.env.REACT_APP_USE_REDUX === 'true';\nconst persist = process.env.REACT_APP_USE_LOCAL_STORAGE === 'true';\n\nlet RenderApp: ReactElement;\n\nif (!useRedux) {\n  RenderApp = <App />;\n} else {\n  RenderApp = (\n    <Provider store={store}>\n      <App />\n    </Provider>\n  );\n\n  if (persist) {\n    const persistor = persistStore(store);\n\n    RenderApp = (\n      <Provider store={store}>\n        <PersistGate loading={<div>Loading...</div>} persistor={persistor}>\n          <App />\n        </PersistGate>\n      </Provider>\n    );\n  }\n}\n\nReactDOM.render(RenderApp, document.getElementById('root'));\n","// Contains routing and any application wide items like headers, footers and navigation\n\nimport React, { ReactElement } from 'react';\nimport { BrowserRouter, HashRouter } from 'react-router-dom'; // Use `HashRouter as Router` when you can't control the URL ... like GitHub pages\nimport { Container, Card } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\n\nconst Router =\n  process.env.REACT_APP_USE_HASH_ROUTER === 'true' ? HashRouter : BrowserRouter;\n\n// START FEATURE FLAGS\nimport { loadFeatureFlagsRedux } from 'feature-flags';\nimport { featureFlagArray } from './feature-flags.config';\n// END FEATURE FLAGS\n\nimport AppNavBar from './AppNavBar';\nimport AppRoutes from './AppRoutes';\nimport SetAxios from './components/SetAxios';\n\nimport './scss/index.scss';\n\nconst Header = (): ReactElement => (\n  <header>\n    <Card bg='dark' text='white'>\n      <Card.Body>\n        <Card.Title>Sample redux application</Card.Title>\n      </Card.Body>\n    </Card>\n  </header>\n);\n\nconst Footer = (): ReactElement => (\n  <footer>\n    <Card bg='light' style={{ marginTop: '20px' }}>\n      {/* Footer content goes here */}\n    </Card>\n  </footer>\n);\n\nconst App = (): ReactElement => {\n  // START FEATURE FLAGS\n  useDispatch()(\n    loadFeatureFlagsRedux({\n      features: featureFlagArray,\n      overrides: JSON.parse(process.env.REACT_APP_FEATURE_FLAGS ?? '[]'),\n      persist:\n        process.env.REACT_APP_USE_LOCAL_STORAGE === 'true' &&\n        process.env.REACT_APP_FEATURE_FLAGS_PERSIST === 'true',\n    })\n  );\n  // END FEATURE FLAGS\n\n  const basename = '';\n  return (\n    <>\n      <Router basename={basename}>\n        <SetAxios />\n        <Header />\n        <AppNavBar />\n        <Container>\n          <main>\n            <AppRoutes />\n          </main>\n        </Container>\n        <Footer />\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\n\nimport { featureFlagsReducers } from 'feature-flags';\n\n// import sample from './REDUCER_TEMPLATE';\n\n// Add each reducer below in the combinedReducers\nexport default combineReducers({\n  FeatureFlags: featureFlagsReducers,\n  //  sample,\n});\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\n/*\nThis file creates the redux store.\nThere normally isn't a need to modify this file\n*/\n\nimport { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\n\nimport {\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport storage from 'redux-persist/lib/storage';\n\nimport rootReducer from './reducers/index';\n\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage,\n};\nconst usePersister = process.env.REACT_APP_USE_LOCAL_STORAGE === 'true';\n\nconst persistedReducer = usePersister\n  ? persistReducer(persistConfig, rootReducer)\n  : rootReducer;\n\nexport const store = configureStore({\n  // @ts-ignore\n  reducer: persistedReducer,\n  // @ts-ignore\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type RootState =\n  | ReturnType<typeof rootReducer>\n  | ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n"],"sourceRoot":""}